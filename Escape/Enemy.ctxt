#BlueJ class context
comment0.params=typeOfEnemy
comment0.target=Enemy(int)
comment0.text=\r\n\ Constructor\ for\ Enemy.\ Use\ only\ for\ Robots.\r\n\ @param\ typeOfEnemy\ Type\ of\ enemy\ this\ object\ should\ be.\r\n\ This\ constructor\ should\ always\ have\ 1\ as\ typeOfEnemy.\r\n
comment1.params=typeOfEnemy\ displacementLeftIn\ displacementRightIn\ headingIn\ speedIn
comment1.target=Enemy(int,\ int,\ int,\ int,\ int)
comment1.text=\r\n\ Constructor\ for\ Enemy.\ Use\ for\ Drones.\r\n\ @param\ typeOfEnemy\ Type\ of\ enemy\ this\ object\ should\ be.\r\n\ This\ constructor\ should\ always\ have\ 0\ as\ typeOfEnemy.\r\n\ @param\ displacementLeftIn\ Distance\ to\ travel\ left.\r\n\ @param\ displacementRightIn\ Distance\ to\ travel\ right.\r\n\ @param\ headingIn\ Initial\ direction\ to\ face.\r\n\ @param\ speedIn\ Speed\ for\ this\ enemy.\r\n
comment10.params=
comment10.target=void\ setEnemy()
comment10.text=\r\n\ Makes\ this\ enemy\ the\ correct\ type\ and\ calls\ the\ action\ for\ that\ enemy.\r\n
comment11.params=
comment11.target=void\ droneMovement()
comment11.text=\r\n\ Moves\ the\ drone\ according\ to\ its\ pathfinding\ system.\r\n
comment12.params=
comment12.target=void\ droneAction()
comment12.text=\r\n\ Causes\ the\ drone\ to\ attack\ Frank.\r\n
comment13.params=
comment13.target=void\ robotMovement()
comment13.text=\r\n\ Causes\ the\ robot\ to\ either\ attack\ Frank\ or\ move.\r\n
comment14.params=
comment14.target=void\ robotAction()
comment14.text=\r\n\ Causes\ the\ robot\ to\ attack\ Frank.\r\n
comment15.params=
comment15.target=void\ robotPatrol()
comment15.text=\r\n\ Causes\ the\ robot\ to\ move\ according\ to\ its\ pathfinding\ system.\r\n
comment16.params=
comment16.target=boolean\ somethingInFront()
comment16.text=\r\n\ @return\ Returns\ true\ if\ there\ is\ a\ Platform\ in\ front\ of\ this\ object.\r\n
comment17.params=
comment17.target=boolean\ somethingInBack()
comment17.text=\r\n\ @return\ Returns\ true\ if\ there\ is\ a\ Platform\ behind\ this\ object.\r\n
comment18.params=
comment18.target=void\ teleport()
comment18.text=\r\n\ Teleports\ the\ scientist\ to\ the\ middle\ of\ the\ map.\r\n\ Shows\ the\ teleport\ animation.\r\n
comment19.params=
comment19.target=void\ scientistAction()
comment19.text=\r\n\ The\ scientist\ finishes\ teleporting\ if\ it\ is\ the\ middle\ of\ doing\ so.\r\n\ If\ not,\ it\ shoots\ at\ Frank\ and\ backs\ away\ from\ him.\r\n
comment2.params=
comment2.target=void\ act()
comment2.text=\r\n\ Updates\ the\ healthbar,\ checks\ for\ death,\ and\ calls\ the\r\n\ method\ responsible\ for\ the\ action\ related\ to\ this\ enemy.\r\n
comment20.params=
comment20.target=void\ dodgeLasers()
comment20.text=\r\n\ The\ scientist\ backs\ away\ from\ lasers\ if\ possible.\r\n
comment21.params=
comment21.target=void\ teleeffect()
comment3.params=
comment3.target=boolean\ frankIsLeft()
comment3.text=\r\n\ @return\ Returns\ true\ if\ Frank\ is\ to\ the\ left\ within\ 100\ pixels.\r\n
comment4.params=
comment4.target=boolean\ frankIsRight()
comment4.text=\r\n\ @return\ Returns\ true\ if\ Frank\ is\ to\ the\ right\ within\ 100\ pixels.\r\n
comment5.params=
comment5.target=void\ fire()
comment5.text=\r\n\ Fires\ a\ laser.\r\n
comment6.params=
comment6.target=boolean\ checkForFrank()
comment6.text=\r\n\ @return\ Returns\ true\ if\ Frank\ is\ within\ 100\ pixels.\r\n
comment7.params=
comment7.target=boolean\ atBorder()
comment7.text=\r\n\ @return\ Returns\ true\ if\ close\ to\ the\ edge\ of\ the\ world.\r\n
comment8.params=
comment8.target=int\ getLife()
comment8.text=\r\n\ @return\ Returns\ the\ life\ of\ the\ enemy.\r\n
comment9.params=lifeAmt
comment9.target=void\ setLife(int)
comment9.text=\r\n\ Sets\ the\ life\ of\ the\ enemy.\r\n\ @param\ lifeAmt\ Value\ to\ set\ to\ life.\r\n
numComments=22
